name: multimedia
summary: Sample multimedia apps for Tegra
description: |
  Collection of multimedia use-cases for Tegra platforms
version: '1.0'
confinement: strict
grade: stable

base: core22

package-repositories:
  - type: apt
    components: [main]
    suites: [r36.4]
    key-id: 3C6D1FF3100C8C3ABB0869C0E6543461A9996195
    key-server: https://repo.download.nvidia.com/jetson/jetson-ota-public.asc
    url: https://repo.download.nvidia.com/jetson/t234
    architectures: [arm64]
  - type: apt
    components: [main]
    suites: [r36.4]
    key-id: 3C6D1FF3100C8C3ABB0869C0E6543461A9996195
    key-server: https://repo.download.nvidia.com/jetson/jetson-ota-public.asc
    url: https://repo.download.nvidia.com/jetson/common
    architectures: [arm64]

plugs:
  hardware-observe:
  camera:
  media-control:
  opengl:
  network-bind:
  kernel-module-observe:
  process-control:
  tegra-camera-plug:
    interface: custom-device
    custom-device: tegra-camera

slots:
  tegra-camera-slot:
    interface: custom-device
    custom-device: tegra-camera
    devices:
      - /dev/capture-isp-channel[0-9]*
      - /dev/capture-vi-channel[0-9]*
      - /dev/tegra_camera_ctrl
      - /dev/v4l2-nvenc
      - /dev/v4l2-nvdec

layout:
  /usr/lib/aarch64-linux-gnu/nvidia:
    bind: $SNAP/usr/lib/aarch64-linux-gnu/nvidia
  /usr/lib/aarch64-linux-gnu/tegra-egl:
    bind: $SNAP/usr/lib/aarch64-linux-gnu/tegra-egl
  /usr/lib/aarch64-linux-gnu/libv4l:
    bind: $SNAP/usr/lib/aarch64-linux-gnu/libv4l

  /usr/share/egl/egl_external_platform.d:
    symlink: $SNAP/usr/share/egl/egl_external_platform.d
  /usr/share/glvnd/egl_vendor.d:
    bind: $SNAP/usr/lib/aarch64-linux-gnu/tegra-egl

  /etc/glvnd/egl_vendor.d:
    bind: $SNAP/etc/glvnd/egl_vendor.d

apps:
  wget:
    command-chain: [bin/wrapper_local]
    command: usr/bin/wget
  unzip:
    command-chain: [bin/wrapper_local]
    command: usr/bin/unzip
  nvargus-nvraw:
    command-chain: [bin/wrapper_local]
    command: usr/sbin/nvargus_nvraw
  v4l2-ctl:
    command-chain: [bin/wrapper_local]
    command: usr/bin/v4l2-ctl
  gst-launch:
    command-chain: [bin/wrapper_local]
    command: usr/bin/gst-launch-1.0
  nvargus-daemon:
    command-chain: [bin/wrapper_local]
    command: usr/sbin/nvargus-daemon
    daemon: simple
    restart-condition: on-failure

parts:
  camera:
    plugin: nil
    override-stage: |
      L4T_DEB_PACKAGES_PATH=${L4T_DEB_PACKAGES_PATH:="NVIDIA_ARCHIVE"}
      if [ "$L4T_DEB_PACKAGES_PATH" = "NVIDIA_ARCHIVE" ]; then
        apt update
        apt download nvidia-l4t-camera nvidia-l4t-gstreamer nvidia-l4t-3d-core nvidia-l4t-multimedia
        apt download nvidia-l4t-core nvidia-l4t-multimedia-utils nvidia-l4t-cuda nvidia-l4t-nvsci
        debian_packages=$(find . -name "nvidia-l4t*.deb")
      elif [ -d $L4T_DEB_PACKAGES_PATH ]; then
        debian_packages="$(find $L4T_DEB_PACKAGES_PATH\
        -name "nvidia-l4t-core_*.deb" -o\
        -name "nvidia-l4t-camera_*.deb" -o\
        -name "nvidia-l4t-gstreamer_*.deb" -o\
        -name "nvidia-l4t-3d-core_*.deb" -o\
        -name "nvidia-l4t-nvsci_*.deb" -o\
        -name "nvidia-l4t-cuda_*.deb" -o\
        -name "nvidia-l4t-multimedia-utils_*.deb" -o\
        -name "nvidia-l4t-multimedia_*.deb")"
      fi
      if [[ ! -z $debian_packages ]]; then
        readarray -t <<<$debian_packages
        for f in "${MAPFILE[@]}"
        do
          echo "extracting: $f..."
          dpkg -x $f $CRAFT_PART_INSTALL/
        done
      fi
      craftctl default
    stage-packages:
      - v4l-utils
      - gstreamer1.0-tools
      - gstreamer1.0-alsa
      - gstreamer1.0-plugins-base
      - gstreamer1.0-plugins-good
      - gstreamer1.0-plugins-bad
      - gstreamer1.0-plugins-ugly
      - gstreamer1.0-libav
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - libgstreamer-plugins-good1.0-dev
      - libgstreamer-plugins-bad1.0-dev
      - unzip
      - wget
  launchers:
    plugin: dump
    source: launchers/
    build-attributes: [no-patchelf]
    organize:
      '*': bin/
