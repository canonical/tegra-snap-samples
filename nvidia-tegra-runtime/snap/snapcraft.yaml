name: nvidia-tegra-runtime # you probably want to 'snapcraft register <name>'
base: core22 # the base snap is the execution environment for this snap
version: '36.4' # just for humans, typically '1.2+git' or '1.3.2'
summary: NVIDIA Tegra firmware and core files for Jetson and IGX ORIN boards (arm64) # 79 char long summary
description: |
  Install all necessary files to run CUDA toolkit on Ubuntu image

grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots

apps:
  nvidia-smi:
    command: usr/sbin/nvidia-smi
    environment:
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/aarch64-linux-gnu/nvidia/
    plugs:
      - hardware-observe
      - opengl

package-repositories:
  - type: apt
    components: [main]
    suites: [r36.4]
    key-id: 3C6D1FF3100C8C3ABB0869C0E6543461A9996195
    key-server: https://repo.download.nvidia.com/jetson/jetson-ota-public.asc
    url: https://repo.download.nvidia.com/jetson/t234
    architectures: [arm64]
  - type: apt
    components: [main]
    suites: [r36.4]
    key-id: 3C6D1FF3100C8C3ABB0869C0E6543461A9996195
    key-server: https://repo.download.nvidia.com/jetson/jetson-ota-public.asc
    url: https://repo.download.nvidia.com/jetson/common
    architectures: [arm64]

parts:
  nvidia-tegra-runtime:
    # See 'snapcraft plugins'
    plugin: nil
    source: .
    override-stage: |
      L4T_DEB_PACKAGES_PATH=${L4T_DEB_PACKAGES_PATH:="NVIDIA_ARCHIVE"}
      if [ "$L4T_DEB_PACKAGES_PATH" = "NVIDIA_ARCHIVE" ]; then
        apt update
        apt download \
          nvidia-l4t-weston \
          nvidia-l4t-firmware \
          nvidia-l4t-wayland \
          nvidia-l4t-libwayland-egl1 \
          nvidia-l4t-libwayland-client0 \
          nvidia-l4t-libwayland-cursor0 \
          nvidia-l4t-libwayland-server0 \
          nvidia-l4t-nvml \
          nvidia-l4t-cuda \
          nvidia-l4t-dla-compiler \
          nvidia-l4t-graphics-demos \
          nvidia-l4t-3d-core \
          nvidia-l4t-core \
          nvidia-l4t-init \
          nvidia-l4t-gbm \
          nvidia-l4t-multimedia-utils \
          nvidia-l4t-multimedia \
          nvidia-l4t-gstreamer \
          nvidia-l4t-camera \
          nvidia-l4t-pva \
          nvidia-l4t-nvsci \
          nvidia-l4t-x11
        debian_packages=$(find . -name "nvidia-l4t*.deb")
      elif [ -d $L4T_DEB_PACKAGES_PATH ]; then
        debian_packages="$(find $L4T_DEB_PACKAGES_PATH\
        -name "nvidia-l4t-weston_*.deb" -o\
        -name "nvidia-l4t-firmware_*.deb" -o\
        -name "nvidia-l4t-wayland_*.deb" -o\
        -name "nvidia-l4t-libwayland-egl1_*.deb" -o\
        -name "nvidia-l4t-libwayland-client0_*.deb" -o\
        -name "nvidia-l4t-libwayland-cursor0_*.deb" -o\
        -name "nvidia-l4t-libwayland-server0_*.deb" -o\
        -name "nvidia-l4t-nvml_*.deb" -o\
        -name "nvidia-l4t-cuda_*.deb" -o\
        -name "nvidia-l4t-dla-compiler_*.deb" -o\
        -name "nvidia-l4t-graphics-demos_*.deb" -o\
        -name "nvidia-l4t-3d-core_*.deb" -o\
        -name "nvidia-l4t-core_*.deb" -o\
        -name "nvidia-l4t-init_*.deb" -o\
        -name "nvidia-l4t-gbm_*.deb" -o\
        -name "nvidia-l4t-multimedia-utils_*.deb" -o\
        -name "nvidia-l4t-multimedia_*.deb" -o\
        -name "nvidia-l4t-gstreamer_*.deb" -o\
        -name "nvidia-l4t-camera_*.deb" -o\
        -name "nvidia-l4t-pva_*.deb" -o\
        -name "nvidia-l4t-nvsci_*.deb" -o\
        -name "nvidia-l4t-x11_*.deb")"
      fi
      if [[ ! -z $debian_packages ]]; then
        readarray -t <<<$debian_packages
        for f in "${MAPFILE[@]}"
        do
          echo "extracting: $f..."
          dpkg -x $f $CRAFT_PART_INSTALL/
        done
      fi
      craftctl default

  scripts:
    plugin: dump
    source: scripts

slots:
  graphics-core22:
    interface: content
    read: [$SNAP]
